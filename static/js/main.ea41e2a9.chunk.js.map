{"version":3,"sources":["logo.svg","Hero.js","MenuBar.jsx","App.js","reportWebVitals.js","index.js"],"names":["Hero","className","width","height","viewBox","points","appBarStyles","makeStyles","appBarTop","background","boxShadow","transition","appBarRegular","backdropFilter","MenuBar","props","useState","isTop","setIsTop","classes","handleScroll","console","log","document","documentElement","scrollTop","useEffect","window","addEventListener","removeEventListener","AppBar","position","style","color","fontFamily","fontSize","marginLeft","contentDivStyle","top","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"4NAAe,I,YCqBAA,EApBF,WAGT,OACI,qBAAKC,UAHS,OAGd,SACI,sBAAKA,UAAU,WAAf,UACI,oBAAIA,UAAU,YAAd,0BACA,oBAAGA,UAAU,eAAb,uBAAsC,qCAAtC,kCACA,yBAAQA,UAAU,MAAlB,UACI,sBAAKC,MAAM,OAAOC,OAAO,OAAOC,QAAQ,YAAYH,UAAU,SAA9D,UACI,0BAAUI,OAAO,2BAA2BJ,UAAU,YACtD,0BAAUI,OAAO,2BAA2BJ,UAAU,eAE1D,8C,wBCThBK,EAAeC,YAAW,CAC1BC,UAAW,CACPC,WAAY,cACZC,UAAW,wCACXC,WAAY,kBAEhBC,cAAe,CACXH,WAAY,sBACZI,eAAgB,aAChBF,WAAY,qBA6CLG,EAzCC,SAACC,GAAW,IAAD,EACGC,oBAAS,GADZ,mBAChBC,EADgB,KACTC,EADS,KAEjBC,EAAUb,IASVc,EAAe,WACjBC,QAAQC,IAAI,UACZD,QAAQC,IAAIC,SAASC,gBAAgBC,WACM,IAAvCF,SAASC,gBAAgBC,UACzBP,GAAS,GAETA,GAAS,IAajB,OATAQ,qBAAU,WAEN,OADAC,OAAOC,iBAAiB,SAAUR,GAC3B,WACHO,OAAOE,oBAAoB,SAAUT,OAOzC,cAACU,EAAA,EAAD,CAEIC,SAAS,QACT9B,UAAWgB,EAAQE,EAAQX,UAAYW,EAAQP,cAHnD,SAKI,sBAAMoB,MAhCK,CACfC,MAAO,QACPC,WAAY,aACZC,SAAU,OACVC,WAAY,OA4BR,6BCjDNC,EAAkB,CACtBN,SAAU,WACVO,IAAK,QAsDQC,MAnDf,WACE,OACE,sBAAKtC,UAAU,YAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,sBAAK+B,MAAOK,EAAZ,UACE,kCACE,+CAEF,kCACE,+CAEF,kCACE,+CAEF,kCACE,+CAEF,kCACE,+CAEF,kCACE,+CAEF,kCACE,+CAEF,kCACE,sDC1BKG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF5B,SAAS6B,eAAe,SAM1BZ,M","file":"static/js/main.ea41e2a9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","\nconst Hero = () => {\n    const className = 'hero';\n\n    return (\n        <div className={className}>\n            <div className=\"heroText\">\n                <h1 className=\"heroTitle\" >Bella & Zach</h1>\n                <p className=\"heroSubtitle\">NOVEMBER 6<sup>th</sup>, 2021 â€¢ WILMINGTON, NC</p>\n                <button className=\"btn\">\n                    <svg width=\"90px\" height=\"45px\" viewBox=\"0 0 90 45\" className=\"border\">\n                        <polyline points=\"89,1 89,44 1,44 1,1 89,1\" className=\"bg-line\" />\n                        <polyline points=\"89,1 89,44 1,44 1,1 89,1\" className=\"hl-line\" />\n                    </svg>\n                    <p>RSVP</p>\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default Hero;","import AppBar from '@material-ui/core/AppBar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useEffect, useState } from 'react';\n\n\nvar appBarStyles = makeStyles({\n    appBarTop: {\n        background: 'transparent',\n        boxShadow: '0 0px 0px 0px rgba(255, 105, 135, .3)',\n        transition: '1s ease-in-out',\n    },\n    appBarRegular: {\n        background: 'rgba(0, 0, 0, 0.4);',\n        backdropFilter: 'blur(20px)',\n        transition: '.5s ease-in-out',\n    }\n});\n\nconst MenuBar = (props) => {\n    const [isTop, setIsTop] = useState(true);\n    const classes = appBarStyles();\n\n    const titleStyle = {\n        color: 'white',\n        fontFamily: 'Audhistine',\n        fontSize: '.7em',\n        marginLeft: '3em'\n    };\n\n    const handleScroll = () => {\n        console.log(\"hello?\");\n        console.log(document.documentElement.scrollTop);\n        if (document.documentElement.scrollTop === 0) {\n            setIsTop(true);\n        } else {\n            setIsTop(false);\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('scroll', handleScroll);\n        return () => {\n            window.removeEventListener('scroll', handleScroll);\n\n        }\n    });\n\n\n    return (\n        <AppBar\n            // className={clsx(classes.root, className)}\n            position='fixed'\n            className={isTop ? classes.appBarTop : classes.appBarRegular}\n        >\n            <span style={titleStyle}>Bella & Zach</span>\n        </AppBar>\n    );\n};\n\nexport default MenuBar;","import logo from './logo.svg';\nimport './App.css';\nimport Hero from './Hero'\nimport MenuBar from './MenuBar'\n\nconst contentDivStyle = {\n  position: 'absolute',\n  top: '100%',\n}\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <MenuBar />\n      <Hero />\n      <div style={contentDivStyle}>\n        <section>\n          <p>hello world!</p>\n        </section>\n        <section>\n          <p>hello world!</p>\n        </section>\n        <section>\n          <p>hello world!</p>\n        </section>\n        <section>\n          <p>hello world!</p>\n        </section>\n        <section>\n          <p>hello world!</p>\n        </section>\n        <section>\n          <p>hello world!</p>\n        </section>\n        <section>\n          <p>hello world!</p>\n        </section>\n        <section>\n          <p>hello world!</p>\n        </section>\n      </div>\n    </div>\n    // <div className=\"App\">\n    //   <header className=\"App-header\">\n    //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    //     <p>\n    //       Edit <code>src/App.js</code> and save to reload.\n    //     </p>\n    //     <a\n    //       className=\"App-link\"\n    //       href=\"https://reactjs.org\"\n    //       target=\"_blank\"\n    //       rel=\"noopener noreferrer\"\n    //     >\n    //       Learn React\n    //     </a>\n    //   </header>\n    // </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}